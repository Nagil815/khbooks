<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	
	<select id="loginCheck" parameterType="map" resultType="int">
		select count(aid) from kh_admin where aid=#{id} and upass=#{pass}
	</select>
	
	<select id="userListCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from kh_user
	</select>
	
	<select id="userList" parameterType="dto.AdminPageDTO" resultType="dto.UserDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from kh_user order by id)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<select id="bookListCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from book
	</select>
	
	<select id="bookList" parameterType="dto.AdminPageDTO" resultType="dto.BookDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from book order by bno)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<select id="userSearchCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from kh_user where ${searchKey} like '%' || #{searchWord} || '%'
	</select>
	
	<select id="userSearch" parameterType="dto.AdminPageDTO" resultType="dto.UserDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from kh_user 
		where ${searchKey} like '%' || #{searchWord} || '%'
		order by id
		)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<select id="bookSearchCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from book where ${searchKey} like '%' || #{searchWord} || '%'
	</select>
	
	<select id="bookSearch" parameterType="dto.AdminPageDTO" resultType="dto.BookDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from book 
		where ${searchKey} like '%' || #{searchWord} || '%'
		order by bno
		)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<select id="userOne" parameterType="string" resultType="dto.UserDTO">
		select * from kh_user where id=#{id}
	</select>
	
	<resultMap type="dto.BookDTO" id="book_and_author" autoMapping="false" >
		<result column="bno" property="bno" />
		<result column="bname" property="bname" />
		<result column="gno" property="gno" />
		<result column="bupdate" property="bupdate" />
		<result column="bgrade" property="bgrade" />
		<result column="bview" property="bview" />
		<result column="bthumb" property="bthumb" />
		<result column="binfo" property="binfo" />
		<collection property="aList" javaType="java.util.List"
			ofType="dto.AuthorDTO"  autoMapping="false" >
			<id column="auno" property="auno" />
			<result column="auname" property="auname" />
			<result column="auintro" property="auintro" />
		</collection>
	</resultMap>
	
	<select id="bookOne" parameterType="int" resultMap="book_and_author">
		select b.*, a.*
		from  book b, book_author ba, author a
		where b.bno=#{bno}
		and b.bno=ba.bno(+)
		and ba.auno=a.auno(+)
	</select>
	
	<delete id="userDelete" parameterType="string">
		delete from kh_user where id=#{id}
	</delete>
	
	<delete id="bookDelete" parameterType="string">
		delete from kh_user where id=#{id}
	</delete>
	
	<update id="userUpdate" parameterType="dto.UserDTO">
		update kh_user
		set upass=#{upass}
		, uname=#{uname}
		, uemail=#{uemail}
		, uphone=#{uphone}
		, ubirth=#{ubirth}
		, ugender=#{ugender}
		where id=#{id}
	</update>
	
	<update id="bookUpdate" parameterType="dto.BookDTO">
		update book 
		set bname=#{bname}
		, gno=#{gno}
		, binfo=#{binfo}
		<if test="bthumb != null">
			, bthumb=#{bthumb}
		</if>
		where bno=#{bno}
	</update>
	
	<select id="authorListCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from author
	</select>
	
	<select id="authorList" parameterType="dto.AdminPageDTO" resultType="dto.AuthorDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from author order by auno)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<select id="authorSearchCount" parameterType="dto.AdminPageDTO" resultType="int">
		select count(*) from author where ${searchKey} like '%' || #{searchWord} || '%' order by auno
	</select>
	
	<select id="authorSearch" parameterType="dto.AdminPageDTO" resultType="dto.AuthorDTO">
		select rownum, b.*
		from(select rownum as rm, a.*
		from(select * from author 
		where ${searchKey} like '%' || #{searchWord} || '%'
		)a)b
		<![CDATA[where b.rm>=#{startRow} and b.rm <=#{endRow}]]>
	</select>
	
	<insert id="authorInsert" parameterType="dto.AuthorDTO">
		insert into author values(author_auno_seq.nextval, #{auname}, #{auintro})
	</insert>
	
	<update id="authorUpdate" parameterType="dto.AuthorDTO">
		update author set auname=#{auname}, auintro=#{auintro}
		where auno=#{auno}
	</update>
	
	<delete id="authorDelete" parameterType="dto.AuthorDTO">
		delete from author where auno=#{auno}
	</delete>
	
	<select id="authorOne" parameterType="int" resultType="dto.AuthorDTO">
		select * from author where auno=#{auno}
	</select>
	
	<insert id="bookInsert" parameterType="dto.BookDTO">
		insert into book values(book_bno_seq.nextval, #{bname}, #{gno}, sysdate, 0, 0, #{bthumb}, #{binfo})
	</insert>
	
	<delete id="serialDelete" parameterType="int">
		delete serial where upno=#{upno}
	</delete>
	
	<select id="getContent" parameterType="int" resultType="string">
		select scontent from serial where upno=#{upno}
	</select>
	
	<update id="serialUpdate" parameterType="dto.SerialDTO">
		update serial
		set 
		<choose>
			<when test="stitle != null and scontent != null">
				stitle=#{stitle}, scontent=#{scontent}
			</when>
			<when test="stitle != null">
				stitle=#{stitle}
			</when>
			<otherwise>
				scontent=#{scontent}
			</otherwise>
		</choose>
		where upno=#{upno}
	</update>
	
	<delete id="baDelete" parameterType="map">
		delete from book_author
		where bno = #{bno}
		and auno = #{auno}
	</delete>
	
	<insert id="baInsert" parameterType="map">
		insert into book_author
		values(#{bno}, #{auno})
	</insert>
	
	<select id="newAuth" parameterType="map" resultType="dto.AuthorDTO">
		select * 
		from author 
		where auname like '%' || #{searchWord} || '%'
		and auno not in(
			select auno
			from book_author
			where bno=#{bno}
		)
	</select>
	
</mapper>











